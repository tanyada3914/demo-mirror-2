name: Build and Deploy to GKE

on:
  push:
    branches:
      - main
      - staging

env:
  PROJECT_ID: ${{ secrets.GOOGLE_PROJECT }}
  IMAGE: rush1auto-new
  REGION: asia-southeast1
  NAME_SPACE: rushone-frontend

jobs:
  build:
    name: Build Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup gcloud CLI
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: Install Components
        run: |
          gcloud components install gke-gcloud-auth-plugin

      - name: Setup gcloud CLI
        uses: google-github-actions/auth@v1
        with:
          project_id: ${{ secrets.GOOGLE_PROJECT }}
          credentials_json: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}

      - name: Configure Docker with gcloud
        run: |
          gcloud auth configure-docker $REGION-docker.pkg.dev
          docker build -t $REGION-docker.pkg.dev/${{ secrets.GOOGLE_PROJECT }}/$IMAGE/$IMAGE:$GITHUB_SHA .
          docker push $REGION-docker.pkg.dev/${{ secrets.GOOGLE_PROJECT }}/$IMAGE/$IMAGE:$GITHUB_SHA

  deploy_staging:
    name: Deploy to Staging GKE
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/staging'

    env:
      GKE_CLUSTER: autopilot-cluster-1

    steps:
      - name: Checkout Kustomize Template
        uses: actions/checkout@v3
        with:
          repository: tkak-team/template
          path: kustomize-template
          ref: main
          token: ${{ secrets.PAT }}
      - id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}'

      - name: Setup gcloud CLI
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: Install Components
        run: |
          gcloud components install gke-gcloud-auth-plugin

      - name: Get GKE Cluster Credentials
        run: |
          gcloud container clusters get-credentials $GKE_CLUSTER --region $REGION --project $PROJECT_ID

      - name: Deploy App to Staging
        run: |
          cd kustomize-template/${NAME_SPACE}/${IMAGE}/overlay/staging
          curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh" | bash
          chmod +x ./kustomize
          ./kustomize edit set image IMAGE=asia-southeast1-docker.pkg.dev/${{ secrets.GOOGLE_PROJECT }}/$IMAGE/$IMAGE:$GITHUB_SHA
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git commit -am "$GITHUB_SHA"
          git push

  deploy_production:
    name: Deploy to Production GKE
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'

    env:
      GKE_CLUSTER: autopilot-production-cluster-1

    steps:
      - name: Checkout Kustomize Template
        uses: actions/checkout@v3
        with:
          repository: tkak-team/template
          path: kustomize-template
          ref: main
          token: ${{ secrets.PAT }}

      - id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          project_id: ${{ secrets.GOOGLE_PROJECT }}
          credentials_json: '${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}'
          
      - name: Setup gcloud CLI
        uses: 'google-github-actions/setup-gcloud@v2'
        
      - name: Install Components
        run: |
          gcloud components install gke-gcloud-auth-plugin

      - name: Get GKE Cluster Credentials
        run: |
          gcloud container clusters get-credentials $GKE_CLUSTER --region $REGION --project $PROJECT_ID

      - name: Deploy App to Production
        run: |
          cd kustomize-template/${NAME_SPACE}/${IMAGE}/overlay/production
          curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh" | bash
          chmod +x ./kustomize
          ./kustomize edit set image IMAGE=asia-southeast1-docker.pkg.dev/${{ secrets.GOOGLE_PROJECT }}/$IMAGE/$IMAGE:$GITHUB_SHA
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git commit -am "$GITHUB_SHA"
          git push
